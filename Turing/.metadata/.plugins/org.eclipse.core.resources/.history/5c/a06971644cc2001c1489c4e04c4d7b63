package it.beije.turing.rubrica.criteria;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaDelete;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.CriteriaUpdate;
import javax.persistence.criteria.Root;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.hibernate.Session;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import javax.persistence.Query;

import it.beije.turing.db.HBsessionFactory;
import it.beije.turing.rubrica.Contatto;



/*Implementare un gestore di rubrica a linea di comando, con le seguenti fu
 * nzionalità:
vedi lista contatti (con possibilità di ordinare per nome e cognome a scelta)

cerca contatto
inserisci nuovo contatto
modifica contatto
cancella contatto
trova contatti duplicati
unisci contatti duplicati

La rubrica deve essere memorizzata su DB e deve esserci la possibilità di importare ed
esportare contatti da/in file XML e CSV*/



public class Rubrica {

	public static List<Element> getChildElements(Element element) {
		List<Element> childElements = new ArrayList<Element>();
		NodeList nodeList = element.getChildNodes();
		for (int n = 0; n < nodeList.getLength(); n++) {
			if (nodeList.item(n) instanceof Element) childElements.add((Element)nodeList.item(n));
		}
		
		return childElements;
	}
	
	public static void importCSV(String csvPath, String sep) {
		
		
		FileReader fileReader = null;
		BufferedReader bufferedReader = null;
		List<Contatto> contatti = null;
		
		try {
			fileReader = new FileReader(csvPath);
			
			bufferedReader = new BufferedReader(fileReader);
			
			int c = 0;
			contatti = new ArrayList<Contatto>();
			Contatto contatto = null;
			
			while (bufferedReader.ready()) {
				String row = bufferedReader.readLine();
				
				System.out.println(++c + " " + row);
				
				row = row.substring(1, row.length());
				String[] columns = row.split(sep);
				
				
				contatto = new Contatto();
				if(columns[0].equals("")) contatto.setCognome("null");
				else contatto.setCognome(columns[0]);
				contatto.setNome(columns[1]);
				contatto.setEmail(columns[2]);
				contatto.setTelefono(columns[3]);
//				contatto.setNote(columns[4]);
				
				System.out.println(contatto);
		
				contatti.add(contatto);
				//Util.insert(contatto);
				
			}
		} catch (IOException ioEx) {
			ioEx.printStackTrace();
		} finally {
			try {
				bufferedReader.close();
				fileReader.close();
			} catch (IOException fEx) {
				fEx.printStackTrace();
			}
		}
		
		
	}
	
	public static void importXML(String xmlPath) {
		DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder documentBuilder = null;
		Document document = null;
		
		try {
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
			document = documentBuilder.parse(xmlPath);
			
			Element root = document.getDocumentElement();
			System.out.println("root : " + root.getTagName());
			
//			NodeList contatti = root.getElementsByTagName("contatto");
//			System.out.println("contatti num : " + contatti.getLength());

			NodeList nodes = root.getChildNodes();
			System.out.println("nodes num : " + nodes.getLength());
			
			List<Element> children = getChildElements(root);
			System.out.println("children num : " + children.size());
			
			for (Element el : children) {
				if (el.getTagName().equalsIgnoreCase("contatto")) {
					List<Element> contatto = getChildElements(el);
					Contatto c = new Contatto();
					for (Element value : contatto) {
						
					
						
						switch (value.getTagName().toLowerCase()) {
						case "nome":
							c.setNome(value.getTextContent());  
							break;
						case "cognome":
							c.setCognome(value.getTextContent());  					
							break;
						case "telefono":
							c.setTelefono(value.getTextContent());  					
							break;
						case "email":
							c.setEmail(value.getTextContent());  						
							break;
						case "note":
							c.setNote(value.getTextContent());  					
							break;

						default:
							break;
						}
						
					}
					Util.insert(c);
					
					System.out.println("eta' : " + el.getAttribute("eta"));
				}
			}
			
		} catch (ParserConfigurationException pcEx) {
			pcEx.printStackTrace();
		} catch (IOException ioEx) {
			ioEx.printStackTrace();
		} catch (SAXException saxEx) {
			saxEx.printStackTrace();
		}
		
	}
	
	public static void main(String[] args) {
		
//		importCSV("/Users/matteoprovezza/Desktop/xml/rubrica_tel.csv", ";");
		
//		Util.select("nome", "luigi");
//		Util.update("telefono", "033429394","0");
//		Util.delete("id", "40");
//		Util.selectOrdered("id", "asc"); //elemento, asc/desc
		
//		importXML("/Users/matteoprovezza/Desktop/xml/rubrica1.xml");
		Util.select();

	}

}
